# Inclu칤mos las bibliotecas necesarias
from utils import *
from os import ST_WRITE
# Debe ser el primer comando
st.set_page_config(
    layout="wide",
    page_title="An치lisis de Calificaciones. MAD/FQ/UNAM",
    page_icon="游븱",     
    initial_sidebar_state="auto"
)

#
# Encabezado
#
encabezado()

st.markdown(
    """
    <style>
        section[data-testid="stSidebar"] {
            width: 50px !important; # Set the width to your desired value
        }
    </style>
    """,
    unsafe_allow_html=True,
)

st.markdown("""
<style>
    [data-testid=stSidebar] {
        background-color: #08088A;
    }
</style>
""", unsafe_allow_html=True)

#
# Lectura de datos
#
df = read_data()

#
# Limpiamos datos
#
df_cleaned = clean_data(df)

#st.markdown("Tabla con datos cuantitativos (sin generaciones)")
df_num=df_cleaned.drop(['Generaci칩n'], axis=1)
#st.write(df_num)
# st.write(f"Cantidad de registros: {df_num.shape[0]}")

"""
### Boxplot
El gr치fico **_boxplot_**, tambi칠n conocido como diagrama de caja y bigotes, es una herramienta visual que nos ayuda a entender la distribuci칩n de un conjunto de datos y a detectar valores at칤picos o extremos en ellos. Este gr치fico muestra la mediana (valor que divide el conjunto de datos en dos partes iguales), el rango intercuart칤lico (la distancia entre el primer y tercer cuartil), y los valores m칤nimo y m치ximo que no son considerados valores at칤picos.

La estructura del boxplot est치 compuesta por:

- La caja: Representa el rango intercuart칤lico y contiene el 50% de los datos. La l칤nea dentro de la caja indica la mediana.

- Los bigotes: Son las l칤neas que se extienden desde la caja y llegan hasta los valores m치s extremos que no son considerados valores at칤picos. Generalmente, se calculan como 1.5 veces el rango intercuart칤lico.

- Los valores at칤picos: Son los puntos fuera de los bigotes y representan valores que est치n significativamente alejados del resto de los datos.

El gr치fico boxplot muestra de manera clara la estructura b치sica de la distribuci칩n, resaltando la mediana, los cuartiles y los valores at칤picos. 
A diferencia de la curva de Gauss, no hace supuestos sobre la forma de la distribuci칩n, 
sino que proporciona una imagen m치s completa de c칩mo est치n distribuidos los datos, 
incluyendo informaci칩n sobre la dispersi칩n y posibles valores at칤picos.

---
#### Calificaciones promedio de los alumnos
"""
fig = go.Figure()
for col in df_num:
  fig.add_trace(go.Box(y=df_num[col].values, name=df_num[col].name))
  
fig.update_layout(title='Boxplot de los promedios de las calificaciones por asignatura')
st.plotly_chart(fig, theme="streamlit", use_container_width=True)

"""
---
#### Edad de los alumnos al ingresar a la MAD
"""

fig = px.histogram(df, x=df['Edad al ingresar'], nbins=40, 
                   title="Gr치fico de barras de la edad de los alumnos al ingresar", 
                   color=df["Edad al ingresar"])
fig.update_layout(
    font_family="Arial",
    font_color="blue",
    title_font_family="Arial",
    title_font_color="white",
    xaxis_title="Edad",
    yaxis_title="Cantidad",
    legend_title_font_color="white"
)
#fig.update_layout(xaxis={'categoryorder':'total ascending'}) # add only this line

st.plotly_chart(fig, theme="streamlit", use_container_width=True)

"""
---
#### Edad de los alumnos al ingresar a la MAD
"""
fig=px.box(y=df['Edad al ingresar'].values, title='Boxplot de la edad de los alumnos al ingresar')
fig.update_layout(
    font_family="Arial",
    font_color="blue",
    title_font_family="Arial",
    title_font_color="white",
    xaxis_title="Edad",
    yaxis_title="Cantidad",
    legend_title_font_color="white"
)
fig

"""
---
#### Cantidad de alumnos por IES de origen
"""
dfc = df.groupby(['IES'])['IES'].count().reset_index(name='count')
dfc=dfc.nlargest(10, 'count')
#st.write(dfc)
fig = px.bar(dfc, x='IES', y='count', title="Las primeras diez IES por frecuencia", color=dfc["IES"])
fig.update_layout(
    font_family="Arial",
    font_color="blue",
    title_font_family="Arial",
    title_font_color="white",
    xaxis_title="IES",
    yaxis_title="Cantidad",
    showlegend=False,
    #legend_title_font_color="white",
    xaxis={'categoryorder':'total descending'}
)

st.plotly_chart(fig, theme="streamlit", use_container_width=True)


#
# Gr치fico de sectores
#
"""
---
Cantidad de alumnos por IES de origen
"""
dfc = df.groupby(['IES'])['IES'].count().reset_index(name='count')
dfc=dfc.nlargest(10, 'count')


fig = px.pie(dfc, values='count', names='IES', title='Las primeras diez IES por frecuencia')
st.plotly_chart(fig, theme="streamlit", use_container_width=True)

